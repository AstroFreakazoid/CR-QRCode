<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="QrCodeImgControl1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJEAAACRCAYAAADD2FojAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACKpJREFUeF7t0sFqJEsWBFH9/0/3CJ5WwwEZeJBRiDQwemMeN1vU17+Xl5H3R/Qy
        8/6IXmbeH9HLzPsjepl5f0QvM++P6GXm/RG9zLw/opeZ90f0MpN/RF9fXx+jUCfFrU5oe8tKLnXklkKd
        FLc6oe0tK7nUkVsKdVLc6oS2t6zkUkduKdRJcasT2t6ykksduaVQJ8WtTmh7y0oulyML9a46ubC8V7e1
        O81yN5fLkYV6V51cWN6r29qdZrmby+XIQr2rTi4s79Vt7U6z3M3lcmSh3lUnF5b36rZ2p1nu5nI5slDv
        qpMLy3t1W7vTLHdzWY+oq4raCW2rp6k3lq4qaidyWY+oq4raCW2rp6k3lq4qaidyWY+oq4raCW2rp6k3
        lq4qaidyWY+oq4raCW2rp6k3lq4qaidyWY+oq4raCW2rp6k3lq4qaidyWY+oq4onOlnRtiqWripqJ3JZ
        j6iriic6WdG2KpauKmonclmPqKuKJzpZ0bYqlq4qaidyWY+oq4onOlnRtiqWripqJ3JZj6iriic6WdG2
        KpauKmonclmPqKuK2okntupkpW7VVUXtRC7rEXVVUTvxxFadrNStuqqonchlPaKuKmonntiqk5W6VVcV
        tRO5rEfUVUXtxBNbdbJSt+qqonYil/WIuqqonXhiq05W6lZdVdRO5HI5svDE3XqjdqJua3ea5W4ulyML
        T9ytN2on6rZ2p1nu5nI5svDE3XqjdqJua3ea5W4ulyMLT9ytN2on6rZ2p1nu5nI5svDE3XqjdqJua3ea
        5W4udeSW4i93t6zkUkduKf5yd8tKLnXkluIvd7es5FJHbin+cnfLSi515JbiL3e3rPTyw9EfQQp1cuH0
        e5/E+yP6Rp1cOP3eJ/H+iL5RJxdOv/dJvD+ib9TJhdPvfRLvj+gbdXLh9HufRP6f1D+COinUVRf0XlWo
        k6J2om7VyUou6xF1UqirLui9qlAnRe1E3aqTlVzWI+qkUFdd0HtVoU6K2om6VScruaxH1Emhrrqg96pC
        nRS1E3WrTlZyWY+ok0JddUHvVYU6KWon6ladrORSRxZF7W6h75Ni6aSonZi2/z3xO///cauidrfQ90mx
        dFLUTkzbn39/RUcWRe1uoe+TYumkqJ2Ytj///oqOLIra3ULfJ8XSSVE7MW1//v0VHVkUtbuFvk+KpZOi
        dmLa/vz7K/WIOinUnVac7oS2UiydPE1+sX6MOinUnVac7oS2UiydPE1+sX6MOinUnVac7oS2UiydPE1+
        sX6MOinUnVac7oS2UiydPE1+sX6MOinUnVac7oS2UiydPM304vKB2spbLN9St+pkRVspaid6CabD2Mpb
        LN9St+pkRVspaid6CabD2MpbLN9St+pkRVspaid6CabD2MpbLN9St+pkRVspaid6CabD2MpbLN9St+pk
        RVspaidyWY/UTmgrhbrTitoJbaVQVxW1E7msR2ontJVC3WlF7YS2UqiritqJXNYjtRPaSqHutKJ2Qlsp
        1FVF7UQu65HaCW2lUHdaUTuhrRTqqqJ2Ipf1SO2EtlKoO62ondBWCnVVUTvRSzAdxlYKdVWhTgp1n66o
        neglmA5jK4W6qlAnhbpPV9RO9BJMh7GVQl1VqJNC3acraid6CabD2EqhrirUSaHu0xW1E70E02FspVBX
        FeqkUPfpitqJXoJ6uHZCW7lQ36ud0LZaqdvaVaZ1/ZjaCW3lQn2vdkLbaqVua1eZ1vVjaie0lQv1vdoJ
        bauVuq1dZVrXj6md0FYu1PdqJ7StVuq2dpVpXT+mdkJbuVDfq53Qtlqp29pV8roeVrco1FVF7cQTW3Wy
        oq2s5LIeUbco1FVF7cQTW3Wyoq2s5LIeUbco1FVF7cQTW3Wyoq2s5LIeUbco1FVF7cQTW3Wyoq2s5LIe
        Ubco1FVF7cQTW3Wyoq2s9DKij3lCUTtRt0t3WqFOLmxroA98QlE7UbdLd1qhTi5sa6APfEJRO1G3S3da
        oU4ubGugD3xCUTtRt0t3WqFOLmxroA98QlE7UbdLd1qhTi5s6w9Cf5jqgt6rLui9xYX3R/Ttgt6rLui9
        xYX3R/Ttgt6rLui9xYX3R/Ttgt6rLui9xYX3R/Ttgt6rLui9xYW81uFbCnVyQe9J8UQnhTpZyaWO3FKo
        kwt6T4onOinUyUoudeSWQp1c0HtSPNFJoU5WcqkjtxTq5ILek+KJTgp1spJLHbmlUCcX9J4UT3RSqJOV
        XC5HFurdpZNC3eKC3pNPkK9c+8B4d+mkULe4oPfkE+Qr1z4w3l06KdQtLug9+QT5yrUPjHeXTgp1iwt6
        Tz5BvnLtA+PdpZNC3eKC3pNPkK/UD1RXFbWrLO9pK4W6094iX64fra4qaldZ3tNWCnWnvUW+XD9aXVXU
        rrK8p60U6k57i3y5frS6qqhdZXlPWynUnfYW+XL9aHVVUbvK8p62Uqg77S3y5frR6qpi6aqnqTfUSVE7
        oa2s5LIeUVcVS1c9Tb2hToraCW1lJZf1iLqqWLrqaeoNdVLUTmgrK7msR9RVxdJVT1NvqJOidkJbWcll
        PaKuKpauepp6Q50UtRPaykou6xF1VXGrq+g9KdSdVtSuktf1sLqquNVV9J4U6k4ralfJ63pYXVXc6ip6
        Twp1pxW1q+R1PayuKm51Fb0nhbrTitpV8roeVlcVt7qK3pNC3WlF7Sp5ffpwZbmr7S2FOlnRVp4mv/jE
        x4jlrra3FOpkRVt5mvziEx8jlrva3lKokxVt5Wnyi098jFjuantLoU5WtJWnyS8+8TFiuavtLYU6WdFW
        nia/qI+5paidWLa30DdLoU5WcqkjtxS1E8v2FvpmKdTJSi515JaidmLZ3kLfLIU6WcmljtxS1E4s21vo
        m6VQJyu51JFbitqJZXsLfbMU6mTl8/9aLx/P+yN6mXl/RC8z74/oZeb9Eb3MvD+il5n3R/Qy8/6IXmbe
        H9HLzPsjehn59+9/c6w7WLOFQV8AAAAASUVORK5CYII=
</value>
  </data>
</root>